{"version":3,"sources":["api.js","index.js"],"names":["search","searchTerm","searchLimit","sortBy","fetch","then","res","json","data","children","map","catch","console","log","err","searchForm","document","getElementById","searchInput","addEventListener","e","preventDefault","value","querySelector","output","results","forEach","image","post","preview","images","source","url","title","truncate","selftext","subreddit","score","innerHTML","showMessage","message","className","div","createElement","appendChild","createTextNode","searchContainer","insertBefore","setTimeout","remove","text","limit","shortened","indexOf","substring"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;AAEA,IAAMe,aAAaC,SAASC,cAAT,CAAwB,aAAxB,CAAnB;AACA,IAAMC,cAAcF,SAASC,cAAT,CAAwB,cAAxB,CAApB;;AAEAF,WAAWI,gBAAX,CAA4B,QAA5B,EAAsC,aAAK;AACzC;AACAC,IAAEC,cAAF;;AAEA;AACA,MAAMpB,aAAaiB,YAAYI,KAA/B;AACA;AACA,MAAMnB,SAASa,SAASO,aAAT,CAAuB,8BAAvB,EAAuDD,KAAtE;AACA;AACA,MAAMpB,cAAcc,SAASC,cAAT,CAAwB,OAAxB,EAAiCK,KAArD;;AAEA;AACAJ,cAAYI,KAAZ,GAAoB,EAApB;;AAEA;AACArB,iBAAe,EAAf,GACI,cAAID,MAAJ,CAAWC,UAAX,EAAuBC,WAAvB,EAAoCC,MAApC,EAA4CE,IAA5C,CAAiD,mBAAW;AAC1D,QAAImB,qCAAJ;AACAC,YAAQC,OAAR,CAAgB,gBAAQ;AACtB;AACA,UAAMC,QAAQC,KAAKC,OAAL,GACVD,KAAKC,OAAL,CAAaC,MAAb,CAAoB,CAApB,EAAuBC,MAAvB,CAA8BC,GADpB,GAEV,qNAFJ;;AAIAR,gGAEmCG,KAFnC,2GAI6BC,KAAKK,KAJlC,kDAK2BC,SAASN,KAAKO,QAAd,EAAwB,GAAxB,CAL3B,qCAMeP,KAAKI,GANpB,kJAQqDJ,KAAKQ,SAR1D,qEAS4CR,KAAKS,KATjD;AAaD,KAnBD;AAoBAb;AACAR,aAASC,cAAT,CAAwB,SAAxB,EAAmCqB,SAAnC,GAA+Cd,MAA/C;AACD,GAxBD,CADJ,GA0BIe,YAAY,0BAAZ,EAAwC,cAAxC,CA1BJ;AA2BD,CA1CD;;AA4CA,SAASA,WAAT,CAAqBC,OAArB,EAA8BC,SAA9B,EAAyC;AACvC;AACA,MAAMC,MAAM1B,SAAS2B,aAAT,CAAuB,KAAvB,CAAZ;AACA;AACAD,MAAID,SAAJ,cAAyBA,SAAzB;AACA;AACAC,MAAIE,WAAJ,CAAgB5B,SAAS6B,cAAT,CAAwBL,OAAxB,CAAhB;AACA;AACA,MAAMM,kBAAkB9B,SAASC,cAAT,CAAwB,kBAAxB,CAAxB;AACA;AACA,MAAMjB,SAASgB,SAASC,cAAT,CAAwB,QAAxB,CAAf;AACA;AACA6B,kBAAgBC,YAAhB,CAA6BL,GAA7B,EAAkC1C,MAAlC;AACA;AACAgD,aAAW,YAAM;AACfN,QAAIO,MAAJ;AACA;AACD,GAHD,EAGG,IAHH;AAID;;AAED,SAASf,QAAT,CAAkBgB,IAAlB,EAAwBC,KAAxB,EAA+B;AAC7B,MAAMC,YAAYF,KAAKG,OAAL,CAAa,GAAb,EAAkBF,KAAlB,CAAlB;AACA,MAAIC,aAAa,CAAC,CAAlB,EAAqB,OAAOF,IAAP;AACrB,SAAOA,KAAKI,SAAL,CAAe,CAAf,EAAkBF,SAAlkBDzEc;AACbpD,UAAQ,gBAASC,UAAT,EAAqBC,WAArB,EAAkCC,MAAlC,EAA0C;AAChD,WAAOC,+CACkCH,UADlC,cACqDE,MADrD,eACqED,WADrE,EAGJG,IAHI,CAGC;AAAA,aAAOC,IAAIC,IAAJ,EAAP;AAAA,KAHD,EAIJF,IAJI,CAIC;AAAA,aAAQG,KAAKA,IAAL,CAAUC,QAAV,CAAmBC,GAAnB,CAAuB;AAAA,eAAQF,KAAKA,IAAb;AAAA,OAAvB,CAAR;AAAA,KAJD,EAKJG,KALI,CAKE;AAAA,aAAOC,QAAQC,GAAR,CAAYC,GAAZ,CAAP;AAAA,KALF,CAAP;AAMD;AARY","file":"RedditSearchApp.map","sourcesContent":["export default {\n  search: function(searchTerm, searchLimit, sortBy) {\n    return fetch(\n      `http://www.reddit.com/search.json?q=${searchTerm}&sort=${sortBy}&limit=${searchLimit}`\n    )\n      .then(res => res.json())\n      .then(data => data.data.children.map(data => data.data))\n      .catch(err => console.log(err));\n  }\n};\n","import api from './api';\n\nconst searchForm = document.getElementById('search-form');\nconst searchInput = document.getElementById('search-input');\n\nsearchForm.addEventListener('submit', e => {\n  // prevents form from submitting\n  e.preventDefault();\n\n  // get search term\n  const searchTerm = searchInput.value;\n  // get sort\n  const sortBy = document.querySelector('input[name=\"sortby\"]:checked').value;\n  // get limit\n  const searchLimit = document.getElementById('limit').value;\n\n  //clear input\n  searchInput.value = '';\n\n  // Search Reddit\n  searchTerm !== ''\n    ? api.search(searchTerm, searchLimit, sortBy).then(results => {\n        let output = `<div class=\"card-columns\">`;\n        results.forEach(post => {\n          // check for image\n          const image = post.preview\n            ? post.preview.images[0].source.url\n            : 'https://applets.imgix.net/https%3A%2F%2Fassets.ifttt.com%2Fimages%2Fchannels%2F1352860597%2Ficons%2Fon_color_large.png%3Fversion%3D0?ixlib=rails-2.1.3&w=240&h=240&auto=compress&s=14be39acc55fbe4638b776011273dfd5';\n\n          output += `\n          <div class=\"card\">\n            <img class=\"card-img-top\" src=\"${image}\" alt=\"Card image cap\">\n            <div class=\"card-body\">\n              <h5 class=\"card-title\">${post.title}</h5>\n              <p class=\"card-text\">${truncate(post.selftext, 100)}</p>\n              <a href=\"${post.url}\" target=\"_blank\" class=\"btn btn-primary\">Read More</a>\n              <hr>\n              <span class=\"badge badge-secondary\">Subreddit: ${post.subreddit}</span>\n              <span class=\"badge badge-dark\">Score: ${post.score}</span>\n            </div>\n        </div>\n          `;\n        });\n        output += `</div>`;\n        document.getElementById('results').innerHTML = output;\n      })\n    : showMessage('Please add a search term', 'alert-danger');\n});\n\nfunction showMessage(message, className) {\n  // create div\n  const div = document.createElement('div');\n  // add class\n  div.className = `alert ${className}`;\n  // add text\n  div.appendChild(document.createTextNode(message));\n  // get parent container\n  const searchContainer = document.getElementById('search-container');\n  // get search\n  const search = document.getElementById('search');\n  // insert message\n  searchContainer.insertBefore(div, search);\n  // timeout\n  setTimeout(() => {\n    div.remove();\n    // document.querySelector('.alert').remove();\n  }, 3000);\n}\n\nfunction truncate(text, limit) {\n  const shortened = text.indexOf(' ', limit);\n  if (shortened == -1) return text;\n  return text.substring(0, shortened);\n}\n"]}